{"version":3,"sources":["logo.svg","1.jpg","2.jpg","3.png","App.js","reportWebVitals.js","index.js"],"names":["Invoke","useState","wif","setWif","isValidWif","setIsValidWif","processing","setProcessing","error","setError","nodeURL","history","useHistory","performInvoke","inputs","a","contract","Neon","experimental","SmartContract","u","HexString","fromHex","networkMagic","rpcAddress","nodeUrl","account","fromAccount","invoke","from","wallet","Account","tokenScriptHash","amountToTransfer","systemFee","networkFee","then","push","catch","e","console","message","useEffect","isWIF","onClick","id","onChange","target","value","type","Home","invokeDetected","className","src","hero1","alt","App","currentBlock","setCurrenBlock","setInvokeDetected","WebSocket","onmessage","event","log","data","JSON","parse","height","notifications","find","event_name","setTimeout","Logo","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d76ea71d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.49aa5273.svg\";","export default __webpack_public_path__ + \"static/media/1.bd030e55.jpg\";","export default __webpack_public_path__ + \"static/media/2.d3d44706.jpg\";","export default __webpack_public_path__ + \"static/media/3.ebbe5071.png\";","import Neon, { wallet } from \"@cityofzion/neon-js\";\nimport { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\n\nimport Logo from \"./logo.svg\";\nimport hero1 from \"./1.jpg\";\nimport hero2 from \"./2.jpg\";\nimport hero3 from \"./3.png\";\nimport \"./App.css\";\n\n// TODO: shuffle through these images randomly\nconst images = [hero1, hero2, hero3];\n\nfunction App() {\n  const [currentBlock, setCurrenBlock] = useState(0);\n  const [invokeDetected, setInvokeDetected] = useState(false);\n\n  useEffect(() => {\n    const socket = new WebSocket(\n      `wss://dora.coz.io/ws/v1/neo3/testnet/log/0xf9ffa64482b38c0dc7841cf27d25a9f03dfb0381`\n    );\n    socket.onmessage = function (event) {\n      console.log(\"incoming socket event:\", { event });\n      const data = JSON.parse(event.data);\n      setCurrenBlock(data.height);\n      if (\n        data.log &&\n        data.log.notifications.find((e) => e.event_name === \"ChangeImage\")\n      ) {\n        setInvokeDetected(true);\n        setTimeout(() => {\n          setInvokeDetected(false);\n        }, 10000);\n      }\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <img id=\"neo-logo\" src={Logo} alt=\"n3-logo\" />\n      <Router>\n        <div>\n          <nav>\n            <code>\n              {\" \"}\n              websocket connection to dora live: current block height:{\" \"}\n              {currentBlock}\n            </code>\n            <ul>\n              <li>\n                <Link to=\"/\">Party time</Link>\n              </li>\n              <li>\n                <Link to=\"/invoke-contract\">Invoke Contract</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route path=\"/invoke-contract\">\n              <Invoke />\n            </Route>\n\n            <Route path=\"/\">\n              <Home invokeDetected={invokeDetected} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction Invoke() {\n  const [wif, setWif] = useState(\"\");\n  const [isValidWif, setIsValidWif] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(false);\n  const nodeURL = \"https://testnet1.neo.coz.io\";\n  const history = useHistory();\n\n  useEffect(() => {\n    if (wallet.isWIF(wif)) {\n      setIsValidWif(true);\n    }\n  }, [wif]);\n\n  async function performInvoke(inputs) {\n    const contract = new Neon.experimental.SmartContract(\n      Neon.u.HexString.fromHex(\"0xf9ffa64482b38c0dc7841cf27d25a9f03dfb0381\"),\n      {\n        networkMagic: inputs.networkMagic,\n        rpcAddress: inputs.nodeUrl,\n        account: inputs.fromAccount,\n      }\n    );\n    await contract.invoke(\"request_image_change\", []);\n  }\n\n  async function handleInvoke() {\n    const from = new wallet.Account(wif);\n    const inputs = {\n      fromAccount: from,\n      tokenScriptHash: \"0xf9ffa64482b38c0dc7841cf27d25a9f03dfb0381\",\n      amountToTransfer: 0.1,\n      systemFee: 0,\n      networkFee: 0,\n      networkMagic: 844378958,\n      nodeUrl: nodeURL,\n    };\n\n    setProcessing(true);\n    performInvoke(inputs)\n      .then(() => {\n        setProcessing(false);\n        history.push(\"/\");\n      })\n      .catch((e) => {\n        console.error(e);\n        setProcessing(false);\n        setWif(\"\");\n        setIsValidWif(false);\n        setError(e.message || e);\n      });\n  }\n\n  return (\n    <>\n      {processing ? (\n        <div>\n          <p>Invoking the smart contract...</p>\n        </div>\n      ) : isValidWif ? (\n        <button onClick={handleInvoke}> CLICK TO INVOKE </button>\n      ) : (\n        <form>\n          {error && <code id=\"error\"> {error} </code>}\n          <label>Enter private key below to invoke contract:</label>\n          <input onChange={(e) => setWif(e.target.value)} type=\"text\"></input>\n        </form>\n      )}\n    </>\n  );\n}\n\nfunction Home({ invokeDetected }) {\n  return (\n    <div id=\"frame-container\">\n      <div id=\"frame\">\n        {invokeDetected && (\n          <img\n            className=\"animate-flicker \"\n            src={hero1}\n            id=\"hero\"\n            alt=\"flickering-hero\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}